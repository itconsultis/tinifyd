#!/usr/bin/env bash

set -axeu -o pipefail

if [ ! -f .env ]; then
    cp .env.example .env
    echo "Created boilerplate .env file in project root.\n"
    echo "********************************************************"
    echo "*** IMPORTANT: You need to modify the .env file NOW. ***"
    echo "*** Make your modifications, then re-run this script.   "
    echo "********************************************************"
    exit 0    
fi

source .env

NODE_CONTAINER=${PROJECT}_node
DB_CONTAINER=${PROJECT}_db
STORAGE_CONTAINER=${PROJECT}_storage

# wait for mysql server to start accepting queries
wait_for_mysql () {
    echo "Waiting for MySQL server to start accepting queries..."
    while [ 0 ];
    do
        sleep 1
        docker exec $DB_CONTAINER bash -c "mysql -u root -proot --execute='SELECT 1'" > /dev/null 2>&1
        exit_code=$?

        if [[ $exit_code -eq 0 ]]; then
            break
        fi
    done
}


npm_tasks () {
    echo "Installing npm dependencies..."
    docker exec $NODE_CONTAINER bash -c "npm install"
}


run_migrations () {
    echo "Running migrations..."
    docker exec $NODE_CONTAINER bash -c "echo"
}


launch () {
    echo "Starting PM2 process manager"
}


containers_up () {
    envsubst < docker-compose-template.yml > docker-compose.yml
    docker-compose -f docker-compose.yml -p $PROJECT up -d
}


containers_up
wait_for_mysql
npm_tasks
run_migrations
launch
